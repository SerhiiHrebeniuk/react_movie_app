{"version":3,"sources":["components/ReusableComponents/Container.js","components/Hero/HeroNavLogo.js","Context/MovieContext.js","components/Hero/HeroNavLink.js","components/Hero/HeroNavMenu.js","components/Hero/HeroNavSearch.js","components/Hero/HeroNav.js","components/Popular/PopularMovies.js","components/ReusableComponents/Loader.js","components/MoviesF/Movies.js","components/MoviesF/MoviesPagination.js","components/Output/Output.js","components/Hero/Hero.js","App.js","index.js"],"names":["styles","css","Container","children","className","style","HeroNavLogo","MovieContext","createContext","MovieState","useState","hiddenMenu","setHiddenMenu","activeLink","setActiveLink","popularMovies","setPopularMovies","search","setSearch","currentPage","setCurrentPage","movies","setMovies","isLoading","setIsLoading","showPagination","setShowPagination","API_KEY","getPopularMovies","a","fetch","popularMoviesResponse","json","popularMoviesData","getMovies","response","data","trim","handleSearch","e","preventDefault","searchResponse","searchData","useEffect","loadingTimeout","setTimeout","clearTimeout","Provider","value","newPage","direction","prevCurrent","HeroNavLink","btnText","useContext","onClick","color","HeroNavMenu","HeroNavSearch","onSubmit","onChange","target","type","placeholder","HeroNav","id","PopularMovies","results","map","popularMovieItem","index","src","poster_path","alt","Loader","Movies","length","movieItem","MoviesPagination","Fragment","cursor","background","Output","Hero","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1a9cc82.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\n\r\n\r\nconst styles = css`\r\n    width: 100%;\r\n    max-wodth: 1300px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Container = ({children}) => (\r\n    <div css={styles} className=\"container\">\r\n        {children}\r\n    </div>  \r\n);\r\n\r\nexport default Container;","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\n\r\nconst style = css`\r\nfont-size: 22px;\r\ncolor: #cb6ad2;\r\nfont-weight: 900;\r\nuser-select: none;\r\n`;\r\n\r\n\r\nconst HeroNavLogo = () => <h2 css={style}>Movie App React</h2>;\r\n\r\nexport default HeroNavLogo;","import React, { useState, createContext, useEffect } from 'react';\r\n\r\n\r\nexport const MovieContext = createContext(); \r\n\r\nexport const MovieState = ({children}) => {\r\n\r\n    const [hiddenMenu, setHiddenMenu] = useState(true);\r\n    const [activeLink, setActiveLink] = useState(\"Popular\");\r\n    const [popularMovies, setPopularMovies] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [movies, setMovies] = useState([]); \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [showPagination, setShowPagination] = useState(true);\r\n\r\n\r\n    const API_KEY = \"03daf76efb29b23c9461aa3c7fd06448\";\r\n\r\n    const getPopularMovies = async () => {\r\n        const  popularMoviesResponse = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=3`);\r\n        const  popularMoviesData = await popularMoviesResponse.json();\r\n        setPopularMovies(popularMoviesData);\r\n    };\r\n\r\n    const getMovies = async () => {\r\n        const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage}`);\r\n        const data = await response.json();\r\n        if(search.trim() === \"\") {\r\n            setMovies(data);\r\n        };\r\n    };\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault();\r\n        if(search.trim() === \" \") return;\r\n            const searchResponse = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=${currentPage}`);\r\n            const searchData = await searchResponse.json();\r\n            setMovies(searchData);\r\n            setShowPagination(false);\r\n    };\r\n\r\n    const newPage = (direction) => {\r\n        if(direction === \"next\") {\r\n            setCurrentPage(prevCurrent => prevCurrent + 1);\r\n            setIsLoading(true);\r\n        } else if(direction === \"previous\" && currentPage !== 1) {\r\n            setCurrentPage(prevCurrent => prevCurrent - 1);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPopularMovies();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(search.trim() === \"\") {\r\n            setShowPagination(true);\r\n        }\r\n        getMovies();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [search, currentPage]);\r\n\r\n    useEffect(() => {\r\n        const loadingTimeout = setTimeout(() => {\r\n                setIsLoading(false);\r\n        }, 1500);\r\n        return () => clearTimeout(loadingTimeout);\r\n    }, [movies, currentPage]);\r\n\r\n    return (\r\n        <MovieContext.Provider \r\n        value={{\r\n            hiddenMenu, \r\n            setHiddenMenu, \r\n            activeLink, \r\n            setActiveLink,\r\n            popularMovies,\r\n            search, \r\n            setSearch,\r\n            currentPage, \r\n            setCurrentPage,\r\n            movies, \r\n            setMovies,\r\n            getPopularMovies,\r\n            getMovies,\r\n            handleSearch,\r\n            isLoading, \r\n            setIsLoading,\r\n            showPagination, \r\n            setShowPagination,\r\n            newPage\r\n            }}>{children}\r\n        </MovieContext.Provider>\r\n    )\r\n};","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useContext } from \"react\";\r\nimport { MovieContext } from \"./../../Context/MovieContext\";\r\n\r\nconst style = css`\r\nborder: none;\r\noutline: none;\r\nbackground: transparent;\r\nfont-size: 22px;\r\nmargin-right: 24px;\r\nfont-weight: 700;\r\ncursor: pointer;\r\nuser-select: none;\r\n@media (max-width: 860px) {\r\n  font-size: 40px;\r\n}\r\n`;\r\n\r\n\r\nconst HeroNavLink = ({btnText}) => {\r\n\r\n    const {setHiddenMenu, activeLink, setActiveLink} = useContext(MovieContext);\r\n\r\n    return (\r\n        <button  onClick={() => {\r\n            setActiveLink(btnText);\r\n            setHiddenMenu(true);\r\n        }} css={style}\r\n            style={{ color: activeLink === btnText ? \"#f9a5ff\" : \"#fff\" }}\r\n        >{btnText}</button> \r\n    )\r\n}\r\n\r\nexport default HeroNavLink;","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport HeroNavLink from \"./HeroNavLink\";\r\nimport { useContext} from 'react';\r\nimport { MovieContext } from './../../Context/MovieContext';\r\n\r\n\r\nconst style = css`\r\npadding-left: 80px;\r\n@media (max-width: 860px) {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  opacity: 1;\r\n  min-height: 100vh;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  padding-left: 0;\r\n  padding: 20px 50px;\r\n  width: 100%;\r\n  max-width: 340px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  transition: all 800ms ease-in-out;\r\n  &.hidden {\r\n    left: -600px;\r\n    opacity: 0;\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst HeroNavMenu = () => {\r\n\r\n    const { hiddenMenu } = useContext(MovieContext);\r\n    \r\n\r\n    return (\r\n        <div css={style} className={(hiddenMenu ? \"hidden\" : \"\") + \" heroNavMenu\"}>\r\n            <HeroNavLink btnText=\"Popular\" />\r\n            <HeroNavLink btnText=\"All Movies\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroNavMenu;","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useContext } from \"react\";\r\nimport { MovieContext } from \"./../../Context/MovieContext\";\r\n\r\nconst style = css`\r\nheight: 40px;\r\nmin-height: 40px;\r\ninput {\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 50px;\r\n  border: 1px solid #2c2f39;\r\n  background: transparent;\r\n  padding: 10px 16px;\r\n  width: 260px;\r\n  color: #f9a5ff;\r\n  &::placeholder {\r\n    color: #f9a5ff;\r\n    letter-spacing: 1px;\r\n  }\r\n}\r\n@media (max-width: 860px) {\r\n  input {\r\n    width: 220px;\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst HeroNavSearch = () => {\r\n\r\n  const { search, setSearch, handleSearch, activeLink } = useContext(MovieContext);\r\n\r\n    return (\r\n        <form css={style} onSubmit={handleSearch} >\r\n          {activeLink !== \"Popular\" && (\r\n            <input value={search} onChange={(e) => setSearch(e.target.value)} type=\"text\" placeholder=\"Search for movies...\"></input>\r\n          )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default HeroNavSearch;","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport Container from \"../ReusableComponents/Container\";\r\nimport HeroNavLogo from \"./HeroNavLogo\";\r\nimport HeroNavMenu from \"./HeroNavMenu\";\r\nimport HeroNavSearch from \"./HeroNavSearch\";\r\nimport { useContext } from \"react\";\r\nimport { MovieContext } from \"./../../Context/MovieContext\";\r\n\r\n\r\nconst style = css`\r\nwidth: 100%;\r\n  min-height: 80px;\r\n  padding: 20px 0;\r\n  background: #212229;\r\n  .container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    .wrapper {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    #burgerMenu {\r\n      color: #f9a5ff;\r\n      cursor: pointer;\r\n      display: none;\r\n    }\r\n  }\r\n  @media (max-width: 860px) {\r\n    .container {\r\n      #burgerMenu {\r\n        display: hidden;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 1365px) {\r\n    .container {\r\n      max-width: 90%;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst HeroNav = () => {\r\n\r\n    const { hiddenMenu, setHiddenMenu } = useContext(MovieContext);\r\n \r\n\r\n    return (\r\n        <nav css={style}>\r\n            <Container>\r\n                <div className=\"wrapper\">\r\n                    <HeroNavLogo />\r\n                    <HeroNavMenu />\r\n                </div>\r\n                <HeroNavSearch />\r\n                <i \r\n                onClick={() => setHiddenMenu(!hiddenMenu)} \r\n                id=\"burgerMenu\" \r\n                className={hiddenMenu ? \"fas fa-bars\" : \"fas fa-times\"}\r\n                ></i>\r\n            </Container>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default HeroNav;","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useContext } from \"react\";\r\nimport { MovieContext } from \"./../../Context/MovieContext\";\r\nimport Container from \"./../ReusableComponents/Container\";\r\n\r\n \r\nconst style = css`\r\nwidth: 70%;\r\n.container {\r\n  &:nth-child(1) {\r\n    height: 81vh;\r\n    overflow-y: scroll;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-wrap: wrap;\r\n    margin-left: 21%;\r\n    &::-webkit-scrollbar {\r\n      width: 0;\r\n    }\r\n    .error {\r\n      font-size: 38px;\r\n      color: red;\r\n      height: 32px;\r\n    }\r\n  }\r\n  img {\r\n    width: 100%;\r\n    max-width: 240px;\r\n    height: 360px;\r\n    margin: 10px 0;\r\n  }\r\n}\r\n@media (max-width: 600px) {\r\n  .container {\r\n    img {\r\n      max-width: 100%;\r\n      height: 500px;\r\n    }\r\n  }\r\n}\r\n@media (min-width: 601px) and (max-width: 854px) {\r\n  .container {\r\n    img {\r\n      max-width: 48%;\r\n    }\r\n  }\r\n}\r\n@media (min-width: 855px) and (max-width: 1144px) {\r\n  .container {\r\n    img {\r\n      max-width: 31%;\r\n    }\r\n  }\r\n}\r\n@media (min-width: 1145px) and (max-width: 1365px) {\r\n  .container {\r\n    img {\r\n      max-width: 23.4%;\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst PopularMovies = () => {\r\n\r\n    const {popularMovies} = useContext(MovieContext);\r\n\r\n    return (\r\n        <div css={style} className=\"popularMovies\">\r\n            <Container>\r\n                {popularMovies.results && popularMovies.results.map((popularMovieItem, index) => (\r\n                    <img \r\n                      key={index} \r\n                      src={`https://image.tmdb.org/t/p/w400/${popularMovieItem.poster_path}`} \r\n                      alt=\"Poster\">\r\n                    </img>\r\n                ))}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularMovies;","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\n\r\n\r\nconst styles = css`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 70px;\r\n    height: 10px;\r\n    background: #3489db;\r\n    border-radius: 5px;\r\n    animation: spinner 1.8s ease-in-out infinite;\r\n    &:before, &:after{\r\n        position: absolute;\r\n        display: block;\r\n        content: \"\";\r\n        animation: spinner 1.8s ease-in-out infinite;\r\n        height: 10px;\r\n        border-radius: 5px;\r\n        margin-top: 15px;\r\n    }\r\n    &:before{\r\n        top: -20xp;\r\n        left: 50px;\r\n        width: 60px;\r\n        background: #ef4836;\r\n    }\r\n    &:after{\r\n        bottom: -30px;\r\n        width: 105px;\r\n        background: #f5ab35;\r\n    }\r\n    @keyframes spinner {\r\n        0%{\r\n            transform: translateX(40px);\r\n        }\r\n        50% {\r\n            transform: translateX(-60px);\r\n        }\r\n        100% {\r\n            transform: translateX(40px);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Loader = () => <div css={styles} className=\"loader\"></div>;\r\n\r\n\r\nexport default Loader;","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useContext } from \"react\";\r\nimport { MovieContext } from \"./../../Context/MovieContext\";\r\nimport Container from \"./../ReusableComponents/Container\";\r\nimport Loader from \"./../ReusableComponents/Loader\";\r\n\r\n\r\n\r\nconst style = css`\r\nwidth: 70%;\r\n.container {\r\n  &:nth-child(1) {\r\n    height: 68vh;\r\n    overflow-y: scroll;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-wrap: wrap;\r\n    margin-left: 21%;\r\n    &::-webkit-scrollbar {\r\n      width: 0;\r\n    }\r\n    .error {\r\n      font-size: 38px;\r\n      color: red;\r\n      height: 32px;\r\n    }\r\n  }\r\n  img {\r\n    width: 100%;\r\n    max-width: 240px;\r\n    height: 360px;\r\n    margin: 10px 0;\r\n  }\r\n}\r\n@media (max-width: 600px) {\r\n  .container {\r\n    img {\r\n      max-width: 100%;\r\n      height: 500px;\r\n    }\r\n  }\r\n}\r\n@media (min-width: 601px) and (max-width: 854px) {\r\n  .container {\r\n    img {\r\n      max-width: 48%;\r\n    }\r\n  }\r\n}\r\n@media (min-width: 855px) and (max-width: 1144px) {\r\n  .container {\r\n    img {\r\n      max-width: 31%;\r\n    }\r\n  }\r\n}\r\n@media (min-width: 1145px) and (max-width: 1365px) {\r\n  .container {\r\n    img {\r\n      max-width: 23.4%;\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst Movies = () => {\r\n\r\n    const { movies, isLoading } = useContext(MovieContext);\r\n\r\n    return (\r\n        <div css={style} className=\"movies\">\r\n            <Container>\r\n                {movies.results && \r\n                    movies.results.length === 0 && \r\n                    (<h1 className=\"error\">Result not found</h1>)\r\n                }\r\n                {!isLoading ? (\r\n                    movies.results && \r\n                        movies.results.map((movieItem, index) => (\r\n                            <img \r\n                                key={index} \r\n                                src={`https://image.tmdb.org/t/p/w400/${movieItem.poster_path}`} \r\n                                alt=\"Poster\">\r\n                            </img>\r\n                    ))\r\n                ) : (\r\n                    <Loader />\r\n                )}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies;","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React, { useContext } from \"react\";\r\nimport { MovieContext } from \"./../../Context/MovieContext\";\r\nimport Container from \"./../ReusableComponents/Container\";\r\n\r\nconst style = css`\r\nwidth: 100%;\r\n.container {\r\n  &:nth-child(1) {\r\n    height: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    button {\r\n      border: none;\r\n      outline: none;\r\n      background: #32de57;\r\n      color: #fff;\r\n      font-size: 20px;\r\n      font-weight: 600;\r\n      border-radius: 4px;\r\n      width: 160px;\r\n      padding: 10px 0;\r\n      cursor: pointer;\r\n      user-select: none;\r\n      margin: 0 10px;\r\n      transition: background 500ms ease-in-out;\r\n      &:hover {\r\n        background: #259a3e;\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst MoviesPagination = () => {\r\n\r\n    const { currentPage, showPagination, newPage } = useContext(MovieContext);\r\n\r\n    return (\r\n        <div css={style} className=\"moviesPagination\">\r\n            {showPagination && (\r\n                <Container>\r\n                    <React.Fragment>\r\n                   <button  \r\n                   style={{cursor: currentPage !== 1 ? \"pointer\" : \"not-allowed\", \r\n                   background: currentPage !==1 ? \"#32de57\" : \"#3033847\"}} \r\n                   onClick={() => newPage(\"previous\")} \r\n                   >Prev Page</button>\r\n                   <button onClick={() => newPage(\"next\")} >Next Page</button>\r\n                   </React.Fragment>\r\n                </Container>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesPagination;","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React, { useContext } from \"react\";\r\nimport { MovieContext } from \"./../../Context/MovieContext\";\r\nimport Container from \"./../ReusableComponents/Container\";\r\nimport Popular from \"./../Popular/PopularMovies\";\r\nimport Movies from \"./../MoviesF/Movies\";\r\nimport MoviesPagination from \"./../MoviesF/MoviesPagination\";\r\n\r\n\r\nconst style = css`\r\n    width: 100%;\r\n    min-height: calc(100vh - 80px);\r\n    display: flex;\r\n    > .container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-evenly;\r\n    }\r\n@media (max-width: 1365px) {\r\n    > .container {\r\n        max-width: 90%;\r\n    }\r\n}\r\n`;\r\n\r\n\r\nconst Output = () => {\r\n\r\n    const { activeLink } = useContext(MovieContext);\r\n\r\n    return (\r\n        <div css={style} className=\"output\">\r\n            {activeLink === \"Popular\" && (\r\n                <Container>\r\n                    <Popular />\r\n                </Container>\r\n            )}\r\n            {activeLink === \"All Movies\" && (\r\n                <Container>\r\n                    <React.Fragment>\r\n                        <Movies />\r\n                        <MoviesPagination />\r\n                    </React.Fragment>\r\n                </Container>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Output;","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport HeroNav from \"./HeroNav\";\r\nimport Output from \"./../Output/Output\";\r\n\r\n\r\n\r\nconst style = css`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  background: #1b1c22;\r\n`;\r\n\r\nconst Hero = () => {\r\n    return (\r\n        <section css={style} className=\"hero\">\r\n            <HeroNav />\r\n            <Output />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Hero;\r\n","import React from \"react\";\nimport Hero from \"./components/Hero/Hero\";\nimport { MovieState } from './Context/MovieContext';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <MovieState>\n      <Hero />\n    </MovieState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}